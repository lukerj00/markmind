openapi: 3.0.0
info:
 title: MarkMind API
 version: 1.0.0
 description: API for MarkMind, a platform for teachers to create and grade assignments, and for students to submit assignments and view grades.

servers:
 - url: https://api.markmind_url.com/

paths:
 /teachers/{teacherId}/dashboard:
   get:
     summary: Get teacher's dashboard
     parameters:
       - in: path
         name: teacherId
         required: true
         schema:
           type: integer
     responses:
       '200':
         description: OK
         content:
           application/json:    
             schema:
               $ref: '#/components/schemas/TeacherDashboard'
       
 /teachers/{teacherId}/assignments/create:
   get:
     summary: Get form to create a new assignment
     parameters:
       - in: path
         name: teacherId
         required: true
         schema:
           type: integer
     responses:
       '200':
         description: OK
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/NewAssignmentForm'
       
 /teachers/{teacherId}/assignments:
   post:
     summary: Create a new assignment
     parameters:
       - in: path
         name: teacherId
         required: true
         schema:
           type: integer
     requestBody:
       required: true
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/NewAssignment'
     responses:
       '201':
         description: Created
         content:
           application/json:    
             schema:
               $ref: '#/components/schemas/Assignment'
       
 /teachers/{teacherId}/classrooms:
   get:
     summary: List teacher's classrooms 
     parameters:
       - in: path
         name: teacherId
         required: true
         schema:
           type: integer
     responses:
       '200':
         description: OK
         content:
           application/json:    
             schema:
               type: array
               items:
                 $ref: '#/components/schemas/Classroom'

 /teachers/{teacherId}/classrooms/{classroomId}/assignments:
   get:
     summary: List assignments for a classroom
     parameters:
       - in: path
         name: teacherId
         required: true
         schema:
           type: integer
       - in: path
         name: classroomId
         required: true
         schema:
           type: integer
     responses:
       '200':
         description: OK
         content:
           application/json:
             schema:
               type: array
               items:
                 $ref: '#/components/schemas/Assignment'
       
 /teachers/{teacherId}/assignments/{assignmentId}/submissions:
   get:
     summary: List submissions for an assignment
     parameters:
       - in: path
         name: teacherId
         required: true
         schema:
           type: integer
       - in: path
         name: assignmentId
         required: true
         schema:
           type: integer
     responses:
       '200':
         description: OK
         content:
           application/json:
             schema:
               type: array
               items:
                 $ref: '#/components/schemas/AssignmentSubmission'
                 
 /teachers/{teacherId}/submissions/{submissionId}:
   get:
     summary: Get a student's assignment submission
     parameters:
       - in: path
         name: teacherId
         required: true
         schema:
           type: integer
       - in: path
         name: submissionId
         required: true
         schema:
           type: integer
     responses:
       '200':
         description: OK
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/AssignmentSubmission'
               
 /teachers/{teacherId}/submissions/{submissionId}/feedback:
   get:
     summary: Get AI feedback for a submission by category
     parameters:
       - in: path
         name: teacherId
         required: true
         schema:
           type: integer
       - in: path
         name: submissionId
         required: true
         schema:
           type: integer
       - in: query
         name: category
         schema:
           type: string
     responses:
       '200':
         description: OK
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/FeedbackCategory'
               
 /teachers/{teacherId}/submissions/{submissionId}/grade:
   post:
     summary: Input final grade and feedback for a submission
     parameters:
       - in: path
         name: teacherId
         required: true
         schema:
           type: integer
       - in: path
         name: submissionId
         required: true
         schema:
           type: integer
     requestBody:
       required: true
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/FinalGradeFeedback'
     responses:
       '200':
         description: OK
                   
 /students/{studentId}/dashboard:
   get:
     summary: Get student's dashboard
     parameters:
       - in: path
         name: studentId
         required: true
         schema:
           type: integer
     responses:
       '200':
         description: OK
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/StudentDashboard'
               
 /students/{studentId}/classrooms:
   get:
     summary: List student's classrooms
     parameters:
       - in: path
         name: studentId
         required: true
         schema:
           type: integer     
     responses:
       '200':
         description: OK
         content:
           application/json:
             schema:
               type: array
               items:
                 $ref: '#/components/schemas/Classroom'
                 
 /students/{studentId}/classrooms/{classroomId}/assignments:
   get:
     summary: List assignments for a student in a classroom  
     parameters:
       - in: path
         name: studentId
         required: true
         schema:
           type: integer
       - in: path
         name: classroomId
         required: true
         schema:
           type: integer
     responses:
       '200':
         description: OK
         content:
           application/json:
             schema:
               type: array
               items:
                 $ref: '#/components/schemas/Assignment'
                 
 /students/{studentId}/assignments/{assignmentId}:
   get:
     summary: Get assignment details for a student
     parameters:
       - in: path
         name: studentId
         required: true
         schema:
           type: integer
       - in: path
         name: assignmentId
         required: true
         schema:
           type: integer
     responses:
       '200':
         description: OK
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Assignment'
               
 /students/{studentId}/assignments/{assignmentId}/submissions:
   post:
     summary: Submit an assignment
     parameters:
       - in: path
         name: studentId
         required: true
         schema:
           type: integer
       - in: path
         name: assignmentId
         required: true
         schema:
           type: integer
     requestBody:
       required: true
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/AssignmentSubmission'
     responses:
       '201':
         description: Created
         
 /students/{studentId}/grades:
   get:
     summary: Get all grades for a student
     parameters:
       - in: path
         name: studentId
         required: true
         schema:
           type: integer
     responses:
       '200':
         description: OK
         content:
           application/json:
             schema:
               type: array
               items:
                 $ref: '#/components/schemas/Grade'
                 
 /students/{studentId}/classrooms/{classroomId}/grades:
   get:
     summary: Get grades for a student in a specific classroom
     parameters:
       - in: path
         name: studentId
         required: true
         schema:
           type: integer  
       - in: path
         name: classroomId
         required: true
         schema:
           type: integer
     responses:
       '200':
         description: OK
         content:
           application/json:
             schema:
               type: array
               items:
                 $ref: '#/components/schemas/Grade'
                 
 /students/{studentId}/assignments/{assignmentId}/grade:
   get:
     summary: Get grade for a specific assignment
     parameters:
       - in: path
         name: studentId
         required: true
         schema:
           type: integer
       - in: path
         name: assignmentId
         required: true
         schema:
           type: integer  
     responses:
       '200':
         description: OK
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Grade'

components:
 schemas:
   TeacherDashboard:
     type: object
     properties:
       teacherId:
         type: integer
       firstName:
         type: string
       lastName:
         type: string
       email:
         type: string
       classrooms:
         type: array
         items:
           $ref: '#/components/schemas/Classroom'
           
   NewAssignmentForm:
     type: object
     properties:
       title:
         type: string
       description:
         type: string
       classroomId:
         type: integer
       assignmentId:
         type: integer
       courseId:
         type: integer
       questions:
         type: array
         items:
           type: string
           
   NewAssignment:
     type: object
     properties:
       title:
         type: string
       description:
         type: string  
       classroomId:
         type: integer
       teacherId:
         type: integer
       courseId:
         type: integer
       assignmentId:
         type: integer
         
   Assignment:
     type: object
     properties:
       assignmentId:
         type: integer
       title:
         type: string
       courseId:
         type: integer
       teacherId:  
         type: integer
       classroomId:
         type: integer  
       description:
         type: string
         
   Classroom:
     type: object  
     properties:
       classroomId:
         type: integer
       teacherId:
         type: integer
       title:
         type: string
       
   AssignmentSubmission:
     type: object
     properties:
       submissionId:
         type: integer
       studentId:
         type: integer
       assignmentId:
         type: integer
       title:
         type: string
       content:
         type: string  
         
   FeedbackCategory:
     type: object
     properties:
       categoryName:
         type: string
       description:
         type: string
       highlighted:
         type: boolean  
       
   FinalGradeFeedback:
     type: object  
     properties:
       submissionId:
         type: integer
       studentId: 
         type: integer
       assignmentId:
         type: integer 
       grade:
         type: number
       feedback:
         type: string
       
   StudentDashboard:
     type: object
     properties:
       studentId:
         type: integer
       firstName:  
         type: string
       lastName:
         type: string
       email:
         type: string
       classrooms:
         type: array
         items:  
           $ref: '#/components/schemas/Classroom'
       grades:
         type: array
         items:
           $ref: '#/components/schemas/Grade'
           
   Grade:
     type: object  
     properties:  
       submissionId:
         type: integer
       studentId:
         type: integer
       assignmentId:  
         type: integer
       grade:
         type: number
       feedback: 
         type: string
         
   Student:
     type: object
     properties:
       studentId:
         type: integer  
       firstName:
         type: string
       lastName:
         type: string
       email:
         type: string